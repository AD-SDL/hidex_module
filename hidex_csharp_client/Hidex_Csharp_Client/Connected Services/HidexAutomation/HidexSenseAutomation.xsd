<?xml version="1.0" encoding="utf-8"?>
<xs:schema xmlns:tns="http://AurentiaSolutions/HidexSenseAutomation" elementFormDefault="qualified" targetNamespace="http://AurentiaSolutions/HidexSenseAutomation" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:import namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays" />
  <xs:import namespace="http://schemas.datacontract.org/2004/07/HidexSense.Automation" />
  <xs:element name="CanRunAssay">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" name="templateName" nillable="true" type="xs:string" />
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="CanRunAssayResponse">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" name="CanRunAssayResult" type="xs:boolean" />
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="CanRunAssayWithSampleData">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" name="templateName" nillable="true" type="xs:string" />
        <xs:element minOccurs="0" name="sampleDataCsvContent" nillable="true" type="xs:string" />
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="CanRunAssayWithSampleDataResponse">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" name="CanRunAssayWithSampleDataResult" type="xs:boolean" />
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="ClosePlateCarrier">
    <xs:complexType>
      <xs:sequence />
    </xs:complexType>
  </xs:element>
  <xs:element name="ClosePlateCarrierResponse">
    <xs:complexType>
      <xs:sequence />
    </xs:complexType>
  </xs:element>
  <xs:element name="Connect">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" name="allowSimulation" type="xs:boolean" />
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="ConnectResponse">
    <xs:complexType>
      <xs:sequence />
    </xs:complexType>
  </xs:element>
  <xs:element name="Disconnect">
    <xs:complexType>
      <xs:sequence />
    </xs:complexType>
  </xs:element>
  <xs:element name="DisconnectResponse">
    <xs:complexType>
      <xs:sequence />
    </xs:complexType>
  </xs:element>
  <xs:element name="GetAssays">
    <xs:complexType>
      <xs:sequence />
    </xs:complexType>
  </xs:element>
  <xs:element name="GetAssaysResponse">
    <xs:complexType>
      <xs:sequence>
        <xs:element xmlns:q1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" minOccurs="0" name="GetAssaysResult" nillable="true" type="q1:ArrayOfstring" />
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="GetAutoExportPath">
    <xs:complexType>
      <xs:sequence />
    </xs:complexType>
  </xs:element>
  <xs:element name="GetAutoExportPathResponse">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" name="GetAutoExportPathResult" nillable="true" type="xs:string" />
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="GetInterfaceVersion">
    <xs:complexType>
      <xs:sequence />
    </xs:complexType>
  </xs:element>
  <xs:element name="GetInterfaceVersionResponse">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" name="GetInterfaceVersionResult" nillable="true" type="xs:string" />
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="GetState">
    <xs:complexType>
      <xs:sequence />
    </xs:complexType>
  </xs:element>
  <xs:element name="GetStateResponse">
    <xs:complexType>
      <xs:sequence>
        <xs:element xmlns:q2="http://schemas.datacontract.org/2004/07/HidexSense.Automation" minOccurs="0" name="GetStateResult" type="q2:InstrumentState" />
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="OpenPlateCarrier">
    <xs:complexType>
      <xs:sequence />
    </xs:complexType>
  </xs:element>
  <xs:element name="OpenPlateCarrierResponse">
    <xs:complexType>
      <xs:sequence />
    </xs:complexType>
  </xs:element>
  <xs:element name="SetAutoExportPath">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" name="exportPath" nillable="true" type="xs:string" />
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="SetAutoExportPathResponse">
    <xs:complexType>
      <xs:sequence />
    </xs:complexType>
  </xs:element>
  <xs:element name="StartAssay">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" name="templateName" nillable="true" type="xs:string" />
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="StartAssayResponse">
    <xs:complexType>
      <xs:sequence />
    </xs:complexType>
  </xs:element>
  <xs:element name="StartAssayWithMetadata">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" name="templateName" nillable="true" type="xs:string" />
        <xs:element minOccurs="0" name="resultTitle" nillable="true" type="xs:string" />
        <xs:element minOccurs="0" name="resultComment" nillable="true" type="xs:string" />
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="StartAssayWithMetadataResponse">
    <xs:complexType>
      <xs:sequence />
    </xs:complexType>
  </xs:element>
  <xs:element name="StartAssayWithSampleData">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" name="templateName" nillable="true" type="xs:string" />
        <xs:element minOccurs="0" name="resultTitle" nillable="true" type="xs:string" />
        <xs:element minOccurs="0" name="resultComment" nillable="true" type="xs:string" />
        <xs:element minOccurs="0" name="sampleDataCsvContent" nillable="true" type="xs:string" />
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="StartAssayWithSampleDataResponse">
    <xs:complexType>
      <xs:sequence />
    </xs:complexType>
  </xs:element>
  <xs:element name="StopAssay">
    <xs:complexType>
      <xs:sequence />
    </xs:complexType>
  </xs:element>
  <xs:element name="StopAssayResponse">
    <xs:complexType>
      <xs:sequence />
    </xs:complexType>
  </xs:element>
  <xs:element name="OnStateChanged">
    <xs:complexType>
      <xs:sequence />
    </xs:complexType>
  </xs:element>
</xs:schema>